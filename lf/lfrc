set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
# Basic Settings
#set hidden true
set drawbox true
set preview true
set icons true
set ignorecase true
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

map x quitcd
cmd quitcd ${{
	echo "1" > "$LF_TEMPDIR"/cdtolastdir
	lf -remote "send $id quit"
}}

cmd showpreview &{{
    lf -remote "send $id set preview"
    lf -remote "send $id map zp nopreview"
}}

cmd nopreview &{{
    lf -remote "send $id set nopreview"
    lf -remote "send $id map zp showpreview"
    ~/.config/lf/cleaner
}}

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) nvim "$f";;
        image/*) devour sxiv $fx > /dev/null 2> /dev/null &;;
        audio/*) devour mpv --player-operation-mode=pseudo-gui -- %U "$f";;
        video/*) devour mpv --player-operation-mode=pseudo-gui -- %U "$f";;
        *) xdg-open "$f" ;;
    esac
}}

cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0; $(pwd | sed "s|$HOME|~|")\007" > /dev/tty
}}

# also run at startup
on-cd

cmd sudomkinstall ${{
  sudo make install
}}

cmd sudomkcleaninstall ${{
  sudo make clean install
}}


cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd folderimages ${{
  sxiv *.jpg *.png
}}

cmd openinterm ${{
  devour alacritty 
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  nvim $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo nvim $ans
}}

# y (select for copy) and P to paste soft-link
# d (select for cut) and P to paste hard-link
cmd link %{{
    set -- $(lf -remote load)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
}}
map P :link

#cmd setwallpaper %cp "$f" ~/.config/wall.png && xwallpaper --zoom "$f"

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"



# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# File Openers
map ee $EDITOR "$f"
map u $view "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# media Mapping
#map dm %mpv
#map v nvimedit
#map i img "$f"

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map mi sudomkinstall
map mci sudomkcleaninstall
map md mkdir
map ms $mkscript
map ch chmod
#map o open_config
map br $vimv $fx
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect
map sx folderimages
map ot openinterm

map gv. cd ~/vids
map gva cd ~/vids/anime
map gvt cd ~/vids/tv
map gvm cd ~/vids/movies

map gp. cd ~/pics
map gps cd ~/pics/screenshots
map gpw cd ~/pics/wallpapers

map gd cd ~/dl
map gm cd ~/music

map gc cd ~/.config
map gl. cd ~/.local
map gls cd ~/.local/share
map glb cd ~/.local/bin
map glg cd ~/.local/src
map ga cd ~/apps
map gs. cd ~/apps/suckless/
map gsd cd ~/apps/suckless/dwm
map gsb cd ~/apps/suckless/dwmblocks
map gsm cd ~/apps/suckless/dmenu

map \;j cd ~
